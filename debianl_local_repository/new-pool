#!/bin/bash

CURPATH=$(dirname $0)
if [[ $1 ]]
  then
  DIST=$1
else
  DIST=local
fi
if [[ $2 ]]
  then
  SECTION=$2
else
  SECTION=main
fi
PATH_LOCAL_REP=$CURPATH
# PATH_NEW_DEB=/var/cache/apt/archives
if [[ $3 ]]
  then
  PATH_NEW_DEB=$PATH_LOCAL_REP/$3 # path for new packages
else
  PATH_NEW_DEB=$PATH_LOCAL_REP/new # path for new packages
fi

MOVE_NEW=True # if PATH_NEW_DEB writeable!
MOVE_NEW_IFOLDER=True # if PATH_NEW_DEB writeable!
PATH_OLD_DEB=$PATH_LOCAL_REP/old # if need old packages

PRELOG=$PATH_LOCAL_REP/log/$(date +%Y-%m-%d-%H-%M-%S)
# FLOG=/dev/null
FLOG=$PRELOG.log
FLOGA=$PRELOG.add.log
FLOGR=$PRELOG.rm.log
FLOGO=$PRELOG.old.log
FLOGE=$PRELOG.err.log

cd $PATH_LOCAL_REP/

# function strvar(){
#   local str
#   str="$( echo "$1" | sed -n "/$2/p" )"
#   leng=${#2}
#   echo ${str:$leng}
# }

function npkgvars(){
  local result
  result=$( echo $1 | sed 's/%3a/:/g' | sed 's/_/ /g' )
  i=0
  for v in $result
  do  
    if [[ $i == 1 ]]
      then
        pkgver=$v
    elif [[ $i == 2 ]]
      then
        pkgarch=$v
    else
      pkgname=$v
    fi
    i=$(( $i + 1 ))
  done
}

function epkgvars(){
  local result
  result=$( echo $1 | sed 's/%3a/:/g' | sed 's/_/ /g' )
  i=0
  for v in $result
  do  
    if [[ $i == 1 ]]
      then
        epkgver=$v
    elif [[ $i == 2 ]]
      then
        epkgarch=$v
    else
      epkgname=$v
    fi
    i=$(( $i + 1 ))
  done
}


list_new_deb=$(ls $PATH_NEW_DEB | grep .deb 2>> $FLOGE )

echo ""
echo "Источник - "$PATH_NEW_DEB
echo ""

if [[ $list_new_deb ]]
  then
  for npkg in $list_new_deb
  do
    ndeb=$PATH_NEW_DEB/$npkg
    fname="$( basename $npkg .deb)"
    npkgvars $fname

    dirdest="pool/$DIST/$SECTION"
    
    if [[ $fname == lib* ]]
    then
      dirname_alf="$dirdest/${pkgname:0:4}"
      name_dir_alf="$PATH_LOCAL_REP/$dirname_alf"
    elif [[ $fname == linux* ]]
    then
      dirname_alf="$dirdest/linux"
      name_dir_alf="$PATH_LOCAL_REP/$dirname_alf"
    else
      dirname_alf="$dirdest/${pkgname:0:1}"
      name_dir_alf="$PATH_LOCAL_REP/$dirname_alf"
    fi
    if [ ! -e $name_dir_alf ];
    then
      mkdir -p $name_dir_alf
    fi

    list_exists_deb=$(ls "$name_dir_alf" | grep '\<'$pkgname'_' | grep '_'$pkgarch'.deb\>' 2>> $FLOGE) 
    if [[ $list_exists_deb ]]
      then
      for existsdeb in $list_exists_deb
      do
        efname="$( basename $existsdeb .deb)"
        epkgvars $efname

        if dpkg --compare-versions $pkgver eq $epkgver
        then
          if [[ $MOVE_NEW_IPATH_NEW_DEBFOLDER ]]
          then
            if [[ $PATH_OLD_DEB ]]
            then
              echo $fname" перемещение в "$PATH_OLD_DEB
              mv -v $ndeb $PATH_OLD_DEB >> $FLOG 2>> $FLOGE
              echo $fname >> $FLOGO
            else
              echo $fname" удаление!!"
              unlink $ndeb 2>> $FLOGE
              echo $fname >> $FLOGR
            fi
          fi
          echo $pkgname" - актуальный ($pkgver)"
      elif dpkg --compare-versions $pkgver gt-nl $epkgver
        then
          if [[ $PATH_OLD_DEB ]]
          then
            echo $existsdeb" перемещение в "$PATH_OLD_DEB
            mv -v $name_dir_alf/$existsdeb $PATH_OLD_DEB >> $FLOG 2>> $FLOGE
            echo $name_dir_alf/$existsdeb >> $FLOGO
          else
            echo $existsdeb" удаление!!"
            unlink $name_dir_alf/$existsdeb 2>> $FLOGE
            echo $name_dir_alf/$existsdeb >> $FLOGR
          fi
          unlink $name_dir_alf/$efname.info 2>> $FLOGE
          if [[ $MOVE_NEW ]]
          then
            echo $ndeb" перемещение в "$name_dir_alf
            mv -v $ndeb $name_dir_alf >> $FLOG 2>> $FLOGE
          else
            echo $ndeb" копирование в "$name_dir_alf
            cp -v $ndeb $name_dir_alf >> $FLOG 2>> $FLOGE
          fi
          echo $fname >> $FLOGA
          apt-ftparchive packages $dirname_alf/$fname.deb > $name_dir_alf/$fname.info 2>> $FLOGE
        else
          if [[ $MOVE_NEW_IFOLDER ]]
          then
            if [[ $PATH_OLD_DEB ]]
            then
              echo $ndeb" перемещение в "$PATH_OLD_DEB
              mv -v $ndeb $PATH_OLD_DEB >> $FLOG
              echo $ndeb >> $FLOGO
            else
              echo $ndeb" удаление!!"
              unlink $ndeb 2>> $FLOGE
              echo $ndeb >> $FLOGR
            fi
          fi
          echo $pkgname" - версия пакета в архиве новее ($epkgver > $pkgver)"	  
        fi
      done
      else
      if [[ $MOVE_NEW ]]
        then
          echo $fname" новый (перемещение)"
          mv -v $ndeb $name_dir_alf >> $FLOG 2>> $FLOGE
        else
          echo $fname" новый (копирование)"
          cp -v $ndeb $name_dir_alf >> $FLOG 2>> $FLOGE
      fi
      echo $fname >> $FLOGA
      apt-ftparchive packages $dirname_alf/$fname.deb > $name_dir_alf/$fname.info 2>> $FLOGE
    fi
  
  done

  $PATH_LOCAL_REP/dist-info $DIST $SECTION
  
  else
    echo "Новых пакетов не обнаружено!!!"
fi

echo ""

exit 0
